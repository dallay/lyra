name: Pre Release Stage üöÄ
on:
  push:
    branches: [ alpha, beta ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: ${{ github.sha }}
  CI: CI
  NATIVE_IMAGE_ENABLED: enabled
  CI_GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

permissions:
  # required for all workflows
  security-events: write
  packages: write
  contents: write
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validation:
    name: Validation üëÄ
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check Project Integrity
        uses: ./.github/actions/check

  build:
    name: Build and Test üß™
    needs: [ validation ]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: üîç CI_GITHUB_TOKEN
        if: env.CI_GITHUB_TOKEN == ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "CI_GITHUB_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV

      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Java Tools & Dependencies
        uses: ./.github/actions/install/java
        with:
          java-version: 21
          gradle-encription-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          gradle-arguments: build --scan

      - name: Source code vulnerability scanning
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
          category: source-code

  static-analysis-security:
    name: üîÆ Static analysis and üîíSecurity Checks
    needs: [ validation ]
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Java Tools & Dependencies
        uses: ./.github/actions/install/java
        with:
          java-version: 21
          gradle-encription-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Install Tools & Dependencies
        uses: ./.github/actions/install/node

      - name: Check OWASP üõ°Ô∏è
        run: ./gradlew dependencyCheckAnalyze --no-daemon --stacktrace

      - name:  Upload owasp-report results üõ°Ô∏è‚¨ÜÔ∏è
        uses: actions/upload-artifact@v4
        with:
          name: owasp-reports
          path: build/reports/owasp

      - name: Run detekt
        run: ./gradlew detektAll --no-daemon --stacktrace

      - name: Upload static reports artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: static-report
          path: |
            build/reports/detekt/detekt.xml
            **/build/reports/lint-results-debug.xml
          retention-days: 1

      - name: Analyze detekt report
        uses: github/codeql-action/upload-sarif@v3.25.6
        with:
          sarif_file: build/reports/detekt/detekt.sarif
          checkout_path: ${{ github.workspace }}

  functional:
    name: Functional Acceptance Tests üß™
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running functional acceptance tests"
  performance:
    name: Performance Tests üöÄ
    needs: [ functional ]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running performance tests"
  security:
    name: Security Tests ü§ñ
    needs: [ performance ]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running security tests"

  code-coverage:
    name: Code Coverage üìä
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          token: ${{ env.CI_GITHUB_TOKEN }}

      - name: Install Java Tools & Dependencies
        uses: ./.github/actions/install/java
        with:
          java-version: 21
          gradle-encription-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Install Tools & Dependencies
        uses: ./.github/actions/install/node

      - name: Run Code Coverage
        run: |
          ./gradlew koverXmlReport --no-daemon --stacktrace

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/kover/report.xml
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)

  semantic-release:
    name: Semantic Release üß≠
    needs: [ security ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          token: ${{ env.CI_GITHUB_TOKEN }}

      - name: Install Java Tools & Dependencies
        uses: ./.github/actions/install/java
        with:
          java-version: 21
          gradle-encription-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Install Tools & Dependencies
        uses: ./.github/actions/install/node

      - name: Run Semantic Release
        run: |
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ env.CI_GITHUB_TOKEN }}
