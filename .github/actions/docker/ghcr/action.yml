name: Publish to GHCR ðŸ“¦
description: |
  This workflow packages and publishes the application to GHCR and performs vulnerability scanning.

inputs:
  deliver:
    description: 'Deliver application to production'
    required: true
    default: true
  image_name:
    description: 'The name of the image to be published'
    required: true
  version:
    description: 'The version of the application'
    required: true
    default: ${{ github.sha }}
  ci_github_token:
    description: 'GITHUB_TOKEN with permissions to push to the container registry'
    required: true
  non_prod_tag:
    description: 'Non production docker image tag'
    required: false
    default: 'nightly'

runs:
  using: composite
  steps:
    - name: OCI image vulnerability scanning
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: base/${{ inputs.image_name }}:latest
        format: 'sarif'
        output: 'trivy-results-oci-image.sarif'
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Upload vulnerability report
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results-oci-image.sarif'

    - name: Log into GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.ci_github_token }}

    - name: Push container image to GHCR ${{ inputs.version }}
      if: ${{ inputs.deliver }}
      run: |
        docker tag base/${{ inputs.image_name }}:latest ghcr.io/${{ inputs.image_name }}:${{ inputs.version }}
        docker tag base/${{ inputs.image_name }}:latest ghcr.io/${{ inputs.image_name }}:latest
        docker tag lyra-app:latest ghcr.io/${{ inputs.image_name }}-app:${{ inputs.version }}
        docker tag lyra-app:latest ghcr.io/${{ inputs.image_name }}-app:latest
        docker tag lyra-landing-page:latest ghcr.io/${{ inputs.image_name }}-landing-page:${{ inputs.version }}
        docker tag lyra-landing-page:latest ghcr.io/${{ inputs.image_name }}-landing-page:latest
        docker push --all-tags ghcr.io/${{ inputs.image_name }}
        docker push --all-tags ghcr.io/${{ inputs.image_name }}-app
        docker push --all-tags ghcr.io/${{ inputs.image_name }}-landing-page
      shell: bash

    - name: Push non-production container image to GHCR ${{ inputs.non_prod_tag }}
      if: ${{ !inputs.deliver }}
      run: |
        docker tag base/${{ inputs.image_name }}:latest \
                    ghcr.io/${{ inputs.image_name }}:${{ inputs.non_prod_tag }}
        docker tag lyra-app:latest ghcr.io/${{ inputs.image_name }}-app:${{ inputs.non_prod_tag }}
        docker tag lyra-landing-page:latest ghcr.io/${{ inputs.image_name }}-landing-page:${{ inputs.non_prod_tag }}
        docker push --all-tags ghcr.io/${{ inputs.image_name }}
        docker push --all-tags ghcr.io/${{ inputs.image_name }}-app
        docker push --all-tags ghcr.io/${{ inputs.image_name }}-landing-page
      shell: bash
