name: Publish to GHCR and Deploy
description: Publish the application to the GitHub Container Registry and deploy to the main stage

inputs:
  deliver:
    description: 'Deliver application to production'
    required: true
    type: boolean
    default: true
  registry:
    description: 'The container registry to push the image to'
    required: true
    type: string
    default: 'ghcr.io'
  image_name:
    description: 'The name of the image to be published'
    required: true
    type: string
  version:
    description: 'The version of the application'
    required: true
    type: string
  ci_github_token:
    description: 'GITHUB_TOKEN with permissions to push to the container registry'
    required: true
    type: string
  owner:
    description: 'The owner of the repository'
    required: true
    type: string
  app_repo:
    description: 'The name of the application repository'
    required: true
    type: string
  non_prod_tag:
    description: 'The tag to use for non-production images'
    required: false
    type: string
    default: 'nightly'

runs:
    using: composite
    steps:
      - name: Log into container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ inputs.ci_github_token }}

      - name: Publish container image
        if: ${{ inputs.deliver }}
        run: |
          docker tag ${{ inputs.image_name }}:${{ inputs.version }} ${{ inputs.registry }}/${{ inputs.owner }}/${{ inputs.app_repo }}:${{ inputs.version }}
          docker push ${{ inputs.registry }}/${{ inputs.owner }}/${{ inputs.app_repo }}:${{ inputs.version }}
          docker tag ${{ inputs.registry }}/${{ inputs.image_name }}:${{ inputs.version }} \
                    ${{ inputs.registry }}/${{ inputs.image_name }}:latest
          docker push ${{ inputs.registry }}/${{ inputs.image_name }}:latest
        shell: bash

      - name: Publish non-production container image to container registry
        if: ${{ !inputs.deliver }}
        run: |
          docker tag ${{ inputs.image_name }}:${{ inputs.version }} ${{ inputs.registry }}/${{ inputs.owner }}/${{ inputs.app_repo }}:${{ inputs.non_prod_tag }}
          docker push ${{ inputs.registry }}/${{ inputs.owner }}/${{ inputs.app_repo }}:${{ inputs.non_prod_tag }}
        shell: bash
