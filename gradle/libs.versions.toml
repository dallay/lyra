[versions]
kotlin = "1.9.20"
springBoot = "3.2.1"
ktor-client = "2.3.6"
ktor-server = "2.3.6"
multiplatform-settings = "1.1.0"
voyager = "1.0.0-rc10"
koin = "3.5.0"
koin-compose = "1.1.0"
junit = "4.13.2"
androidGradlePlugin = "8.1.4"
composeMultiplatform = "1.5.10"
compose-compiler = "1.5.4"
exposed = "0.37.3"
skiko = "0.7.85"
klint-plugin = "11.6.1"
klint = "1.0.1"
detekt = "1.23.3"
kotlinx-coroutines = "1.7.3"
androidx-junit = "1.1.5"
espressoCore = "3.5.1"
accompanistSystemuicontroller = "0.32.0"
activityCompose = "1.8.1"
firebase = "32.5.0"
owasp = "8.4.3"
asciidoctor = "4.0.0-alpha.1"
dokka = "1.9.10"
frontend-gradle-plugin = "8.0.0"
springManagement = "1.1.4"


[libraries]
# Gradle Plugins
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-ktlint = { module = "org.jlleitschuh.gradle.ktlint:org.jlleitschuh.gradle.ktlint.gradle.plugin", version.ref = "klint-plugin" }
gradle-ktlint-idea = { module = "org.jlleitschuh.gradle.ktlint-idea:org.jlleitschuh.gradle.ktlint-idea.gradle.plugin", version.ref = "klint-plugin" }
gradle-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }
# Utils
gradle-owasp-depcheck = { module = "org.owasp:dependency-check-gradle", version.ref = "owasp" }
gradle-asciidoctor = { module = "org.asciidoctor:asciidoctor-gradle-jvm", version.ref = "asciidoctor" }
# Detekt
gradle-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
detekt-compose = { module = "io.nlopez.compose.rules:detekt", version = "0.3.3" }
detekt-compose2 = { module = "ru.kode:detekt-rules-compose", version = "1.3.0" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }


# Common
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor-client" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor-client" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor-client" }

multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatform-settings" }
multiplatform-settings-no-arg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform-settings" }
multiplatform-settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatform-settings" }
multiplatform-settings-test = { module = "com.russhwolf:multiplatform-settings-test", version.ref = "multiplatform-settings" }
skiko = { module = "org.jetbrains.skiko:skiko", version.ref = "skiko" }
skiko-macos-arm64 = { module = "org.jetbrains.skiko:skiko-awt-runtime-macos-arm64", version.ref = "skiko" }
ktor-client = "io.ktor:ktor-client-core:2.3.6"
kamel = "media.kamel:kamel-image:0.7.3"
kmp-settings = "com.russhwolf:multiplatform-settings-no-arg:1.1.0"
kermit = "co.touchlab:kermit:2.0.2"

kotlinx-serialization-json = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0"
kotlinx-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.4.1"
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-bottom-sheet-navigator = { module = "cafe.adriel.voyager:voyager-bottom-sheet-navigator", version.ref = "voyager" }
voyager-tab-navigator = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyager" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

# Android
compose-bom = "androidx.compose:compose-bom:2023.10.01"
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

androidx-core-ktx = "androidx.core:core-ktx:1.12.0"
androidx-core-splashscreen = "androidx.core:core-splashscreen:1.0.1"
androidx-tracing-ktx = "androidx.tracing:tracing-ktx:1.1.0"
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanistSystemuicontroller" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase" }

junit = { module = "junit:junit", version.ref = "junit" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoCore" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }

# iOS

# Desktop
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose" }
kotlinx-coroutines-swingui = "org.jetbrains.kotlinx:kotlinx-coroutines-swing:1.7.3"
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor-client" }
androidx-compose-ui-util = "androidx.compose.ui:ui-util:1.6.0-beta01"

# Backend
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor-server" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor-server" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor-server" }
ktor-server-locations = { module = "io.ktor:ktor-server-locations", version.ref = "ktor-server" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor-server" }
ktor-server-status-pages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor-server" }
ktor-server-catching-headers = { module = "io.ktor:ktor-server-caching-headers", version.ref = "ktor-server" }
ktor-server-compression = { module = "io.ktor:ktor-server-compression", version.ref = "ktor-server" }
ktor-server-conditional-headers = { module = "io.ktor:ktor-server-conditional-headers", version.ref = "ktor-server" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor-server" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor-server" }
ktor-server-metrics = { module = "io.ktor:ktor-server-metrics", version.ref = "ktor-server" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor-server" }
ktor-server-html-builder-jvm = { module = "io.ktor:ktor-server-html-builder-jvm", version.ref = "ktor-server" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor-server" }
ktor-server-serialization-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor-server" }
ktor-server-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor-server" }
ktor-server-tomcat = { module = "io.ktor:ktor-server-tomcat", version.ref = "ktor-server" }
ktor-server-openapi = { module = "io.ktor:ktor-server-openapi", version.ref = "ktor-server" }
ktor-server-tests-jvm = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor-server" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

kotlinx-html-jvm = "org.jetbrains.kotlinx:kotlinx-html-jvm:0.9.1"
logback-classic = "ch.qos.logback:logback-classic:1.4.11"
postgresql = "org.postgresql:postgresql:42.3.8"
hikariCP = "com.zaxxer:HikariCP:5.0.1"
swagger-codegen = "io.swagger.codegen.v3:swagger-codegen-generators:1.0.44"

kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

[plugins]
#Common
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }

#Backend
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version = "1.6.10" }
shadow = { id = "com.github.johnrengelman.shadow", version = "7.0.0" }


frontend-gradle-plugin = { id = "org.siouan.frontend-jdk17", version.ref = "frontend-gradle-plugin" }
spring-boot = { id = "org.springframework.boot", version.ref = "springBoot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "springManagement" }
[bundles]

