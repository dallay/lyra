name: Pre Release Stage 🚀
on:
  push:
    branches: [ alpha, beta ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  VERSION: ${{ github.sha }}
  CI: CI
  NATIVE_IMAGE_ENABLED: enabled
  CI_GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

permissions:
  packages: write
  contents: write
  issues: write

jobs:
  validation:
    name: 👀 Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.1.0

      - name: Install Tools & Dependencies
        uses: ./.github/actions/install/node

      - name: Run Check
        run: pnpm run check
  build:
    name: Build and Test 🧪
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: 🔍 CI_GITHUB_TOKEN
        if: env.CI_GITHUB_TOKEN == ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "CI_GITHUB_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV

      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Java Tools & Dependencies
        uses: ./.github/actions/install/java
        with:
          java-version: 21
          gradle-arguments: build --scan

      - name: Source code vulnerability scanning
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'sarif'
          output: 'trivy-results-source-code.sarif'

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        if: success() || failure()
        with:
          sarif_file: 'trivy-results-source-code.sarif'
          category: source-code

  functional:
    name: Functional Acceptance Tests 🧪
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running functional acceptance tests"
  performance:
    name: Performance Tests 🚀
    needs: [ functional ]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running performance tests"
  security:
    name: Security Tests 🤖
    needs: [ performance ]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running security tests"

  semantic-release:
    name: Semantic Release 🧭
    needs: [ security ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          token: ${{ env.CI_GITHUB_TOKEN }}

      - name: Install Java Tools & Dependencies
        uses: ./.github/actions/install/java

      - name: Install Tools & Dependencies
        uses: ./.github/actions/install/node

      - name: Run Semantic Release
        run: |
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ env.CI_GITHUB_TOKEN }}
