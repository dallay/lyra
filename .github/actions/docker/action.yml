name: Package and Publish ðŸ“¦
description: |
  This workflow is responsible for packaging and publishing the application
  to the container registry. It also performs vulnerability scanning.

inputs:
  deliver:
    description: 'Deliver application to production'
    required: true
    default: 'true'
  registry:
    description: 'The container registry to push the image to'
    required: true
    default: 'ghcr.io'
  docker_username:
    description: 'The username for Docker Hub'
    required: true
  docker_password:
    description: 'The password for Docker Hub'
    required: true
  image_name:
    description: 'The name of the image to be published'
    required: true
  version:
    description: 'The version of the application'
    required: true
  ci_github_token:
    description: 'GITHUB_TOKEN with permissions to push to the container registry'
    required: true
  gradle-encryption-key:
    description: 'The encryption key to use for the gradle cache'
    required: true
  docker_hub_image:
    description: 'Docker hub image name'
    required: false
    default: 'n4t5u/lyra'
  non_prod_tag:
    description: 'Non production docker image tag'
    required: false
    default: 'nightly'

runs:
  using: composite
  steps:
    - name: Install Java Tools & Dependencies
      uses: ./.github/actions/install/java
      with:
        java-version: 21
        gradle-encription-key: ${{ inputs.gradle-encryption-key }}

    - name: Execute Gradle build
      run: |
        chmod +x gradlew
        ./gradlew assemble
        ./gradlew bootBuildImage --imageName base/${{ inputs.image_name }}:latest
      shell: bash

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Authenticate and Log into Registries
      run: |
        echo ${{ inputs.ci_github_token }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        echo ${{ inputs.docker_password }} | docker login docker.io -u ${{ inputs.docker_username }} --password-stdin
        docker build . --target lyra-app --tag lyra-app:latest
        docker build . --target lyra-landing-page --tag lyra-landing-page:latest
      shell: bash

    - name: Publish to GHCR ðŸ“¦
      uses: ./.github/actions/docker/ghcr
      with:
        deliver: ${{ inputs.deliver }}
        image_name: ${{ inputs.image_name }}
        version: ${{ inputs.version }}
        ci_github_token: ${{ inputs.ci_github_token }}
        non_prod_tag: ${{ inputs.non_prod_tag }}
        tags: ${{ steps.meta.outputs.tags }}

    - name: Publish to Docker Hub ðŸ“¦
      uses: ./.github/actions/docker/dockerhub
      with:
        deliver: ${{ inputs.deliver }}
        docker_username: ${{ inputs.docker_username }}
        docker_password: ${{ inputs.docker_password }}
        image_name: ${{ inputs.image_name }}
        version: ${{ inputs.version }}
        docker_hub_image: ${{ inputs.docker_hub_image }}
        non_prod_tag: ${{ inputs.non_prod_tag }}
        tags: ${{ steps.meta.outputs.tags }}
